{"version":3,"sources":["Components/Palette/Palette.module.css","Components/ColorPicker/ColorPicker.module.css","Components/UserPalette/UserPalette.module.css","Components/Palette/Palette.js","Components/UserPalette/UserPalette.js","Components/ColorPicker/ColorPicker.js","Components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Palette","value","onColorChange","onTemporaryColorChange","onCancelColorSelection","useState","parseInt","slice","red","setRed","green","setGreen","blue","setBlue","color","setColor","convertColors","rgb","map","x","toString","length","join","useEffect","className","style","Container","Triangle","Slider","type","id","min","max","step","onChange","e","preventDefault","newRed","target","redInput","newGreen","greenInput","newBlue","blueInput","ButtonContainer","onClick","event","CancelButton","OkButton","UserPalette","colors","handleClickChooseColor","Text","List","Item","bind","ItemText","backgroundColor","Square","ColorPicker","showPalette","setShowPalette","showUserPalette","setShowUserPalette","squareColor","setSquareColor","elRef","useRef","handleMouseUp","current","contains","window","addEventListener","removeEventListener","dismissDropdowns","handleColorChange","handleTemporaryColorChange","tempColor","ref","Menu","Number","Color","Arrow","Icon","App","setValue","setColors","includes","concat","localStorage","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92c2da15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Palette_Container__1_qpx\",\"ButtonContainer\":\"Palette_ButtonContainer__3o0cl\",\"CancelButton\":\"Palette_CancelButton__1CHxu\",\"OkButton\":\"Palette_OkButton__3LurS\",\"Slider\":\"Palette_Slider__2_4Zp\",\"redInput\":\"Palette_redInput__1oogq\",\"greenInput\":\"Palette_greenInput__2TEGP\",\"blueInput\":\"Palette_blueInput__3AI4b\",\"Triangle\":\"Palette_Triangle__5IVZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ColorPicker_Container__23YWC\",\"Menu\":\"ColorPicker_Menu__2_Zsx\",\"Number\":\"ColorPicker_Number__IMK3W\",\"Square\":\"ColorPicker_Square__38tA8\",\"Color\":\"ColorPicker_Color__146wK\",\"Arrow\":\"ColorPicker_Arrow__3AkHJ\",\"Icon\":\"ColorPicker_Icon__1OCtd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserPalette_Container__36Yhy\",\"List\":\"UserPalette_List__O-lnO\",\"Text\":\"UserPalette_Text__libYn\",\"Item\":\"UserPalette_Item__evBiO\",\"ItemText\":\"UserPalette_ItemText__3OfMP\",\"Square\":\"UserPalette_Square__39xDM\",\"Triangle\":\"UserPalette_Triangle__1dXuk\"};","import { useEffect, useState } from 'react';\r\nimport style from './Palette.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Palette({\r\n  value,\r\n  onColorChange,\r\n  onTemporaryColorChange,\r\n  onCancelColorSelection,\r\n}) {\r\n  const [red, setRed] = useState(parseInt(value.slice(1, 3), 16));\r\n  const [green, setGreen] = useState(parseInt(value.slice(3, 5), 16));\r\n  const [blue, setBlue] = useState(parseInt(value.slice(6), 16));\r\n  const [color, setColor] = useState(value);\r\n\r\n  useEffect(() => {\r\n    onTemporaryColorChange(color);\r\n  }, [color, value, onTemporaryColorChange]);\r\n\r\n  function convertColors(rgb) {\r\n    const hex =\r\n      '#' +\r\n      rgb\r\n        .map(function (x) {\r\n          x = parseInt(x).toString(16);\r\n          return x.length === 1 ? '0' + x : x;\r\n        })\r\n        .join('');\r\n    return hex;\r\n  }\r\n\r\n  function handleChangeRed(e) {\r\n    e.preventDefault();\r\n    const newRed = e.target.value;\r\n    setRed(newRed);\r\n    setColor(convertColors([newRed, green, blue]));\r\n  }\r\n\r\n  function handleChangeGreen(e) {\r\n    e.preventDefault();\r\n    const newGreen = e.target.value;\r\n    setGreen(newGreen);\r\n    setColor(convertColors([red, newGreen, blue]));\r\n  }\r\n\r\n  function handleChangeBlue(e) {\r\n    e.preventDefault();\r\n    const newBlue = e.target.value;\r\n    setBlue(newBlue);\r\n    setColor(convertColors([red, green, newBlue]));\r\n  }\r\n\r\n  const handleCancelBtnClick = event => {\r\n    event.preventDefault();\r\n    onTemporaryColorChange(value);\r\n    onCancelColorSelection();\r\n  };\r\n\r\n  const handleOKClick = event => {\r\n    event.preventDefault();\r\n    onColorChange(color);\r\n    onTemporaryColorChange(color);\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.Triangle}></div>\r\n      <div className={style.Slider}>\r\n        <input\r\n          type=\"range\"\r\n          id=\"red\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          step=\"1\"\r\n          value={red}\r\n          onChange={handleChangeRed}\r\n          className={style.redInput}\r\n        ></input>\r\n        <input\r\n          type=\"range\"\r\n          id=\"green\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          value={green}\r\n          onChange={handleChangeGreen}\r\n          className={style.greenInput}\r\n        ></input>\r\n        <input\r\n          type=\"range\"\r\n          id=\"blue\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          value={blue}\r\n          onChange={handleChangeBlue}\r\n          className={style.blueInput}\r\n        ></input>\r\n      </div>\r\n      <div className={style.ButtonContainer}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCancelBtnClick}\r\n          className={style.CancelButton}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleOKClick}\r\n          className={style.OkButton}\r\n        >\r\n          Ok\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Palette;\r\n\r\nPalette.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onColorChange: PropTypes.func.isRequired,\r\n  onTemporaryColorChange: PropTypes.func.isRequired,\r\n  onCancelColorSelection: PropTypes.func.isRequired,\r\n};\r\n","import style from './UserPalette.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction UserPalette({ colors, onColorChange, onTemporaryColorChange }) {\r\n  function handleClickChooseColor(color, event) {\r\n    event.preventDefault();\r\n    onColorChange(color);\r\n    onTemporaryColorChange(color);\r\n  }\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.Triangle}></div>\r\n      <h2 className={style.Text}>Your color collection</h2>\r\n      <ul className={style.List}>\r\n        {colors.map(color => (\r\n          <li\r\n            key={color}\r\n            className={style.Item}\r\n            onClick={handleClickChooseColor.bind(this, color)}\r\n          >\r\n            <h2 className={style.ItemText}>{color}</h2>\r\n            <div\r\n              style={{ backgroundColor: color }}\r\n              className={style.Square}\r\n            ></div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default UserPalette;\r\n\r\nUserPalette.propTypes = {\r\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onColorChange: PropTypes.func.isRequired,\r\n  onTemporaryColorChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport style from './ColorPicker.module.css';\r\nimport { ChevronDown } from 'react-feather';\r\nimport Palette from '../Palette';\r\nimport UserPalette from '../UserPalette';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ColorPicker({ value, onChange, colors }) {\r\n  const [showPalette, setShowPalette] = useState(false);\r\n  const [showUserPalette, setShowUserPalette] = useState(false);\r\n  const [squareColor, setSquareColor] = useState(value);\r\n\r\n  const elRef = useRef();\r\n\r\n  useEffect(() => {\r\n    function handleMouseUp(event) {\r\n      const isElementChild = elRef.current.contains(event.target);\r\n\r\n      if (!isElementChild) {\r\n        setSquareColor(value);\r\n        setShowPalette(false);\r\n        setShowUserPalette(false);\r\n      }\r\n    }\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n    return () => {\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [value, onChange]);\r\n\r\n  function togglePalette() {\r\n    if (showUserPalette) {\r\n      setShowUserPalette(false);\r\n    }\r\n    setShowPalette(!showPalette);\r\n  }\r\n\r\n  function toggleUserPalette() {\r\n    if (showPalette) {\r\n      setShowPalette(false);\r\n    }\r\n    setShowUserPalette(!showUserPalette);\r\n  }\r\n\r\n  const handleSquareClick = event => {\r\n    event.preventDefault();\r\n    togglePalette();\r\n  };\r\n\r\n  const handleArrowClick = event => {\r\n    event.preventDefault();\r\n    toggleUserPalette();\r\n  };\r\n\r\n  const dismissDropdowns = () => {\r\n    setShowPalette(false);\r\n    setShowUserPalette(false);\r\n  };\r\n\r\n  const handleColorChange = color => {\r\n    onChange(color);\r\n    dismissDropdowns();\r\n  };\r\n\r\n  const handleTemporaryColorChange = tempColor => {\r\n    setSquareColor(tempColor);\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container} ref={elRef}>\r\n      <div className={style.Menu}>\r\n        <div className={style.Number} onClick={dismissDropdowns}>\r\n          {squareColor}\r\n        </div>\r\n        <div className={style.Square} onClick={handleSquareClick}>\r\n          <div\r\n            style={{ backgroundColor: squareColor }}\r\n            className={style.Color}\r\n          ></div>\r\n        </div>\r\n        <div className={style.Arrow} onClick={handleArrowClick}>\r\n          <ChevronDown className={style.Icon} />\r\n        </div>\r\n      </div>\r\n\r\n      {showPalette && (\r\n        <Palette\r\n          value={value}\r\n          onColorChange={handleColorChange}\r\n          onTemporaryColorChange={handleTemporaryColorChange}\r\n          onCancelColorSelection={dismissDropdowns}\r\n        />\r\n      )}\r\n      {showUserPalette && (\r\n        <UserPalette\r\n          colors={colors}\r\n          onColorChange={handleColorChange}\r\n          onTemporaryColorChange={handleTemporaryColorChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ColorPicker;\r\n\r\nColorPicker.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport './App.css';\nimport ColorPicker from './ColorPicker';\n\nfunction App() {\n  const [value, setValue] = useState('#ff0000');\n  const [colors, setColors] = useState(['#ff0000']);\n\n  function handleOnChange(color) {\n    setValue(color);\n    if (!colors.includes(color)) {\n      setColors(colors.concat(color));\n    }\n\n    localStorage.setItem('value', value);\n  }\n\n  return (\n    <div className=\"App\">\n      <ColorPicker onChange={handleOnChange} colors={colors} value={value} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}