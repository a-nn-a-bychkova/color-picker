{"version":3,"sources":["Components/Palette/Palette.js","Components/UserPalette/UserPalette.js","Components/ColorPicker/ColorPicker.js","Components/App.js","reportWebVitals.js","index.js","Components/Palette/Palette.module.css","Components/ColorPicker/ColorPicker.module.css","Components/UserPalette/UserPalette.module.css"],"names":["Slider","value","onColorChange","addColorToUsersPalette","togglePalette","onTemporaryColorChange","useState","red","setRed","green","setGreen","blue","setBlue","color","setColor","convertColors","rgb","map","x","parseInt","toString","length","join","useEffect","className","style","Container","type","id","min","max","step","onChange","e","preventDefault","newRed","target","redInput","newGreen","greenInput","newBlue","blueInput","ButtonContainer","onClick","event","localStorage","getItem","CancelButton","chosenColor","console","log","setItem","OkButton","ModalPalette","colors","toggleUserPalette","handleClickChooseColor","innerText","Text","List","Item","ItemText","width","height","backgroundColor","border","uuidv4","ColorPicker","onChangePalette","showPalette","setShowPalette","showUserPalette","setShowUserPalette","squareColor","setSquareColor","elRef","useRef","handleMouseUp","current","contains","window","addEventListener","removeEventListener","handleColorChange","ref","Menu","Number","Square","Color","Arrow","Icon","Palette","tempColor","UserPalette","App","setValue","setColors","newColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ccdf8fac.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport style from './Palette.module.css';\r\n\r\nfunction Slider({\r\n  value,\r\n  onColorChange,\r\n  addColorToUsersPalette,\r\n  togglePalette,\r\n  onTemporaryColorChange,\r\n}) {\r\n  const [red, setRed] = useState('255');\r\n  const [green, setGreen] = useState('00');\r\n  const [blue, setBlue] = useState('00');\r\n  const [color, setColor] = useState(value);\r\n\r\n  useEffect(() => {\r\n    onTemporaryColorChange(color);\r\n  }, [color, setColor]);\r\n\r\n  function handleChangeRed(e) {\r\n    e.preventDefault();\r\n    let newRed = e.target.value;\r\n    setRed(newRed);\r\n    setColor(convertColors([newRed, green, blue]));\r\n  }\r\n\r\n  function convertColors(rgb) {\r\n    let hex =\r\n      '#' +\r\n      rgb\r\n        .map(function (x) {\r\n          x = parseInt(x).toString(16);\r\n          return x.length == 1 ? '0' + x : x;\r\n        })\r\n        .join('');\r\n\r\n    return hex;\r\n  }\r\n\r\n  function handleChangeGreen(e) {\r\n    e.preventDefault();\r\n    let newGreen = e.target.value;\r\n    setGreen(newGreen);\r\n    setColor(convertColors([red, newGreen, blue]));\r\n  }\r\n  function handleChangeBlue(e) {\r\n    e.preventDefault();\r\n    let newBlue = `${e.target.value}`;\r\n    setBlue(newBlue);\r\n    setColor(convertColors([red, green, newBlue]));\r\n    // mixColors(red, green, newBlue);\r\n    // if (newBlue > 100) {\r\n    //   setBlue(newBlue);\r\n    //   mixColors(red, green, newBlue);\r\n    // } else if (newBlue >= 0) {\r\n    //   setBlue(newBlue.padStart(3, '0'));\r\n    //   mixColors(red, green, newBlue.padStart(3, '0'));\r\n    // }\r\n  }\r\n\r\n  const handleCancelBtnClick = event => {\r\n    event.preventDefault();\r\n    onTemporaryColorChange(localStorage.getItem('currentColor'));\r\n    togglePalette();\r\n  };\r\n\r\n  const handleOKClick = event => {\r\n    event.preventDefault();\r\n    let chosenColor = color;\r\n    console.log('colro in OK', chosenColor);\r\n    addColorToUsersPalette(chosenColor);\r\n    onColorChange(chosenColor);\r\n    localStorage.setItem('currentColor', chosenColor);\r\n    togglePalette();\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <div className={style.Slider}>\r\n        <input\r\n          type=\"range\"\r\n          id=\"red\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          step=\"1\"\r\n          value={red}\r\n          onChange={handleChangeRed}\r\n          className={style.redInput}\r\n        ></input>\r\n        <input\r\n          type=\"range\"\r\n          id=\"green\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          value={green}\r\n          onChange={handleChangeGreen}\r\n          className={style.greenInput}\r\n        ></input>\r\n        <input\r\n          type=\"range\"\r\n          id=\"blue\"\r\n          min=\"0\"\r\n          max=\"255\"\r\n          value={blue}\r\n          onChange={handleChangeBlue}\r\n          className={style.blueInput}\r\n        ></input>\r\n      </div>\r\n      <div className={style.ButtonContainer}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleCancelBtnClick}\r\n          className={style.CancelButton}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleOKClick}\r\n          className={style.OkButton}\r\n        >\r\n          Ok\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import { useEffect } from 'react';\r\nimport style from './UserPalette.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ModalPalette({ colors, toggleUserPalette, onColorChange }) {\r\n  useEffect(() => {}, []);\r\n  // const deleteColor = key => {\r\n  //   console.log(key);\r\n  // };\r\n\r\n  const handleClickChooseColor = event => {\r\n    event.preventDefault();\r\n    console.log('value in user', event.target.innerText);\r\n    onColorChange(event.target.innerText);\r\n    localStorage.setItem('currentColor', event.target.innerText);\r\n    toggleUserPalette();\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container}>\r\n      <h2 className={style.Text}>Your color collection</h2>\r\n      {colors && (\r\n        <ul className={style.List}>\r\n          {colors.map(color => (\r\n            <li\r\n              key={uuidv4()}\r\n              className={style.Item}\r\n              onClick={handleClickChooseColor}\r\n            >\r\n              <h2 className={style.ItemText}>{color}</h2>\r\n              <div\r\n                style={{\r\n                  width: '15px',\r\n                  height: '15px',\r\n                  backgroundColor: color,\r\n                  border: '1px solid #b6b6b4',\r\n                }}\r\n              ></div>\r\n              {/* <X onClick={deleteColor(key)} /> */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ModalPalette;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport style from './ColorPicker.module.css';\r\nimport { ChevronDown } from 'react-feather';\r\nimport Palette from '../Palette';\r\nimport UserPalette from '../UserPalette';\r\n\r\nfunction ColorPicker({ value, onChange, colors, onChangePalette }) {\r\n  const [showPalette, setShowPalette] = useState(false);\r\n  const [showUserPalette, setShowUserPalette] = useState(false);\r\n  const [temporaryColor, setTemporaryColor] = useState('#00ff00');\r\n  const [squareColor, setSquareColor] = useState(value);\r\n\r\n  const elRef = useRef();\r\n\r\n  useEffect(() => {\r\n    function handleMouseUp(event) {\r\n      const isElementChild = elRef.current.contains(event.target);\r\n      if (!isElementChild) {\r\n        setShowPalette(false);\r\n        setShowUserPalette(false);\r\n      }\r\n    }\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n    return () => {\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  function togglePalette() {\r\n    if (showUserPalette) {\r\n      setShowUserPalette(false);\r\n    }\r\n    setShowPalette(!showPalette);\r\n  }\r\n\r\n  function toggleUserPalette() {\r\n    if (showPalette) {\r\n      setShowPalette(false);\r\n    }\r\n    setShowUserPalette(!showUserPalette);\r\n  }\r\n\r\n  const handleSquareClick = event => {\r\n    event.preventDefault();\r\n    togglePalette();\r\n  };\r\n\r\n  const handleArrowClick = event => {\r\n    event.preventDefault();\r\n    toggleUserPalette();\r\n  };\r\n\r\n  const handleColorChange = color => {\r\n    onChange(color);\r\n    setSquareColor(color);\r\n    localStorage.setItem('currentColor', color);\r\n  };\r\n\r\n  const addToPalette = color => {\r\n    onChangePalette(color);\r\n    setSquareColor(color);\r\n    onChange(color);\r\n    localStorage.setItem('currentColor', color);\r\n  };\r\n\r\n  const handleTemporaryColorChange = tempColor => {\r\n    setSquareColor(tempColor);\r\n  };\r\n\r\n  return (\r\n    <div className={style.Container} ref={elRef}>\r\n      <div className={style.Menu}>\r\n        <div className={style.Number}>{squareColor}</div>\r\n        <div className={style.Square} onClick={handleSquareClick}>\r\n          <div\r\n            style={{ backgroundColor: squareColor }}\r\n            className={style.Color}\r\n          ></div>\r\n        </div>\r\n        <div className={style.Arrow} onClick={handleArrowClick}>\r\n          <ChevronDown className={style.Icon} />\r\n        </div>\r\n      </div>\r\n\r\n      {showPalette && (\r\n        <Palette\r\n          value={value}\r\n          togglePalette={togglePalette}\r\n          onColorChange={handleColorChange}\r\n          addColorToUsersPalette={addToPalette}\r\n          onTemporaryColorChange={handleTemporaryColorChange}\r\n        />\r\n      )}\r\n      {showUserPalette && (\r\n        <UserPalette\r\n          colors={colors}\r\n          onColorChange={handleColorChange}\r\n          toggleUserPalette={toggleUserPalette}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ColorPicker;\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ColorPicker from './ColorPicker';\n\nfunction App() {\n  const [value, setValue] = useState('#ff0000');\n  const [colors, setColors] = useState([]);\n\n  useEffect(() => {}, []);\n\n  function handleOnChange(color) {\n    setValue(color);\n    console.log('value is updated');\n    //here will be chosen color and addin it to the array of colors\n    // if (chosenColor) {\n    //   setSelectedColors([...selectedColors, chosenColor]);\n    //   console.log('selectedColorsArray', selectedColors);\n    // } else {\n    //   return;\n    // }\n  }\n  function handleChangePalette(newColor) {\n    setColors([...colors, newColor]);\n  }\n\n  return (\n    <div className=\"App\">\n      <ColorPicker\n        onChange={handleOnChange}\n        colors={colors}\n        value={value}\n        onChangePalette={handleChangePalette}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Palette_Container__1_qpx\",\"ButtonContainer\":\"Palette_ButtonContainer__3o0cl\",\"CancelButton\":\"Palette_CancelButton__1CHxu\",\"OkButton\":\"Palette_OkButton__3LurS\",\"Slider\":\"Palette_Slider__2_4Zp\",\"redInput\":\"Palette_redInput__1oogq\",\"greenInput\":\"Palette_greenInput__2TEGP\",\"blueInput\":\"Palette_blueInput__3AI4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ColorPicker_Container__23YWC\",\"Menu\":\"ColorPicker_Menu__2_Zsx\",\"Number\":\"ColorPicker_Number__IMK3W\",\"Square\":\"ColorPicker_Square__38tA8\",\"Color\":\"ColorPicker_Color__146wK\",\"Arrow\":\"ColorPicker_Arrow__3AkHJ\",\"Icon\":\"ColorPicker_Icon__1OCtd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserPalette_Container__36Yhy\",\"List\":\"UserPalette_List__O-lnO\",\"Text\":\"UserPalette_Text__libYn\",\"Item\":\"UserPalette_Item__evBiO\",\"ItemText\":\"UserPalette_ItemText__3OfMP\",\"TipTriangle\":\"UserPalette_TipTriangle__QZ9Q7\"};"],"sourceRoot":""}